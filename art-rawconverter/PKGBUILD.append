
: ${_clang:=false}

read _week _day <<< $(date '+%U %u')
if [[ $(( (_week + _day) % 2 )) == 1  ]] ; then
  _pkgtype='avx-git'
else
  _pkgtype='git'
fi

# basic info
_pkgname="art-rawconverter"
pkgname="$_pkgname"
: ${pkgname:="$_pkgname-$_pkgtype"}
pkgver=1.21
pkgrel=1
pkgdesc="Raw image Converter forked from RawTherapee with ease of use in mind"
url="https://bitbucket.org/agriggio/art"
license=('GPL3')
arch=('x86_64')

# main package
_main_package() {
  depends=(
    'desktop-file-utils'
    'exiv2'
    'fftw'
    'glibmm'
    'gtk3'
    'gtkmm3'
    'lcms2'
    'lensfun'
    'libcanberra'
    'libiptcdata'
    'libraw'
    'mimalloc'
    'opencolorio'
    'openmp'
  )
  makedepends=(
    'cmake'
    'fakeroot'
    'gcc'
    'git'
    'hicolor-icon-theme'
    'pkgconf'
  )
  optdepends=(
    'chaotic-interfere: chaotic-aur interference tracker'
    'art-rawconverter-imageio: add support for additional image formats'
    'lcms2-ff: lcms2 with fast-float plugin for improved export speed'
    'perl-image-exiftool: metadata support for CR3 images'
  )

  [[ "${_clang::1}" == "t" ]] && makedepends+=('clang' 'lld' 'llvm')

  if [ "$pkgname" == "$_pkgname" ] ; then
    _main_stable
  else
    _main_git
  fi
}

# stable package
_main_stable() {
  _pkgsrc="$_pkgname"
  source+=("$_pkgsrc"::"git+$url.git#tag=${pkgver%%.r*}")
  sha256sums+=('SKIP')

  _prepare() {
    pushd "$_pkgsrc"

    local _tag=$(git tag | grep -Ev '^.*[A-Za-z]{2}.*$' | sort -V | tail -1)
    _pkgver="${_tag:?}"

    if [[ "$_pkgver" != "${pkgver%%.r*}" ]] ; then
      git checkout -f "$_tag"
      git describe --long --tags
    fi

    popd
  }
  pkgver() {
    echo "${_pkgver:?}"
  }
}

# git package
_main_git() {
  provides=("$_pkgname")
  conflicts=("$_pkgname")

  _pkgsrc="$_pkgname"
  source+=("$_pkgsrc"::"git+$url.git")
  sha256sums+=('SKIP')

  _prepare() {
    _pkgver=$(pkgver)
  }

  pkgver() {
    cd "$_pkgsrc"
    git describe --long --tags --exclude='*[a-zA-Z][a-zA-Z]*' | sed -E 's/^v//;s/([^-]*-g)/r\1/;s/-/./g'
  }
}

# common functions
prepare() {
  _prepare

  # fix version in about dialog
  sed -E \
    -e 's@^(\s*)execute_process.*GIT_CMD.*describe.*GIT_DESCRIBE.*$@set(GIT_DESCRIBE "'"${_pkgver:?}"'")@' \
    -i "${srcdir:?}/$_pkgsrc/UpdateInfo.cmake"
}

build() {
  if [[ "${_pkgtype::3}" == "avx" ]] && [[ "$pkgname" != "$_pkgname" ]] ; then
    export CFLAGS="$(echo "$CFLAGS" | sed -E 's@(\s*-(march|mtune)=\S+\s*)@ @g;s@\s*-O[0-9]\s*@ @g;s@\s+@ @g') -march=x86-64-v3 -mtune=skylake -O3"
    export CXXFLAGS="$(echo "$CXXFLAGS" | sed -E 's@(\s*-(march|mtune)=\S+\s*)@ @g;s@\s*-O[0-9]\s*@ @g;s@\s+@ @g') -march=x86-64-v3 -mtune=skylake -O3"
  fi

  local _cmake_options=(
    -B build
    -S "$_pkgsrc"
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_BUILD_TYPE=Release \
    -DWITH_LTO=ON
    -DENABLE_LIBRAW=ON
    -DENABLE_OCIO=ON
    -DBUILD_SHARED=ON
    -Wno-dev
  )

  [[ "${_clang::1}" == "t" ]] && _cmake_options+=(
    -DCMAKE_C_COMPILER=clang
    -DCMAKE_CXX_COMPILER=clang++
  )

  cmake "${_cmake_options[@]}"
  cmake --build build
}

package() {
  DESTDIR="${pkgdir:?}" cmake --install build

  # symlinks
  ln -s "ART" "${pkgdir:?}/usr/bin/art"
  ln -s "ART-cli" "${pkgdir:?}/usr/bin/art-cli"
}

# execute
_main_package

_pkgname=yuzu
pkgname=$_pkgname-git
pkgver=r24955.755f45a52
pkgrel=1
pkgdesc='An experimental open-source emulator for the Nintendo Switch'
arch=('i686' 'x86_64')
url='https://github.com/yuzu-emu/yuzu'
license=('GPL2')
provides=('yuzu')
conflicts=('yuzu')
 
depends=(
  'boost-libs'
  'cubeb'
  'enet'
  'fmt'
  'libinih'
  'qt5-multimedia'
  'qt5-webengine'
  'sdl2'
)
makedepends=(
  'boost'
  'catch2'
  'cmake'
  'ffmpeg'
  'gcc'
  'git'
  'glslang'
  'llvm'
  'ninja'
  'nlohmann-json'
  'qt5-tools'
  'rapidjson'
  'robin-map'
  'vulkan-headers'
)
 
optdepends=(
  "qt5-wayland: Wayland support"
)
 
source=(
  "$_pkgname::git+https://github.com/yuzu-emu/yuzu"
  'git+https://github.com/lsalzman/enet.git'
  'git+https://github.com/benhoyt/inih.git'
  'git+https://github.com/mozilla/cubeb.git'
  'git+https://github.com/MerryMage/dynarmic.git'
  'git+https://github.com/libusb/libusb.git'
  'git+https://github.com/yuzu-emu/discord-rpc.git'
  'git+https://github.com/KhronosGroup/Vulkan-Headers.git'
  'git+https://github.com/yuzu-emu/sirit'
  'git+https://github.com/yuzu-emu/mbedtls.git'
  'git+https://github.com/herumi/xbyak.git'
  'git+https://github.com/xiph/opus.git'
  'git+https://git.ffmpeg.org/ffmpeg.git'
  'git+https://github.com/libsdl-org/SDL.git'
  'git+https://github.com/yhirose/cpp-httplib.git'
  'git+https://github.com/Microsoft/vcpkg.git'
  'git+https://github.com/arun11299/cpp-jwt.git'
  'git+https://github.com/bylaws/libadrenotools.git'
  'git+https://github.com/lat9nq/tzdb_to_nx.git'
  'git+https://github.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator.git'
  # cubeb dependencies
  'git+https://github.com/arsenm/sanitizers-cmake.git'
  'git+https://github.com/google/googletest'
  # sirit dependencies
  'git+https://github.com/KhronosGroup/SPIRV-Headers.git'
  # libadrenotools' dependencies
  'git+https://github.com/bylaws/liblinkernsbypass.git'
  # tzdb_to_nx submodules
  'git+https://github.com/eggert/tz.git'
)
sha256sums=(
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
  'SKIP'
)
 
pkgver() {
  cd "$srcdir/$_pkgname"
  echo "r$(git rev-list --count HEAD).$(git rev-parse --short HEAD)"
}
 
prepare() {
  cd "$srcdir/$_pkgname"
 
 
  for submodule in {inih,cubeb,dynarmic,libusb,discord-rpc,Vulkan-Headers,sirit,mbedtls,xbyak,opus,ffmpeg,SDL,cpp-httplib,vcpkg,cpp-jwt,enet,libadrenotools,tzdb_to_nx,VulkanMemoryAllocator}; 
  do
    git config --file=.gitmodules submodule.$submodule.url "$srcdir/${submodule}"
  done
 
  git -c protocol.file.allow=always submodule update --init
 
  cd "$srcdir/$_pkgname"/externals/cubeb
 
  git config --file=.gitmodules submodule.cmake/sanitizers-cmake.url "$srcdir/sanitizers-cmake"
  git config --file=.gitmodules submodule.googletest.url "$srcdir/googletest"
  git -c protocol.file.allow=always submodule update --init
  
  cd "$srcdir/$_pkgname"/externals/sirit
  
  git config --file=.gitmodules submodule.externals/SPIRV-Headers.url "$srcdir/SPIRV-Headers"
  git -c protocol.file.allow=always submodule update --init
 
  cd "$srcdir/$_pkgname/externals/libadrenotools"
  git config --file=.gitmodules submodule.lib/linkernsbypass.url "$srcdir/liblinkernsbypass"
  git -c protocol.file.allow=always submodule update --init
 
  cd "$srcdir/$_pkgname/externals/nx_tzdb/tzdb_to_nx/"
  git config --file=.gitmodules submodule.externals/tz/tz.url "$srcdir/tz"
  git -c protocol.file.allow=always submodule update --init
}
 
build() {
  local cmake_options=(
    -S "$_pkgname"
    -B build
    -GNinja
    -DCMAKE_INSTALL_PREFIX=/usr
    -DCMAKE_C_COMPILER=gcc
    -DCMAKE_CXX_COMPILER=g++
    -DCMAKE_C_FLAGS="$CFLAGS"
    -DCMAKE_CXX_FLAGS="$CXXFLAGS"
    -DCMAKE_BUILD_TYPE=Release
 
    -DYUZU_DOWNLOAD_TIME_ZONE_DATA=ON
    -DYUZU_ENABLE_LTO=ON
    -DYUZU_TESTS=OFF
    -DYUZU_USE_BUNDLED_FFMPEG=OFF
    -DYUZU_USE_BUNDLED_QT=OFF
    -DYUZU_USE_EXTERNAL_SDL2=OFF
    -DYUZU_USE_EXTERNAL_VULKAN_HEADERS=OFF
    -DYUZU_USE_QT_MULTIMEDIA=ON
    -DYUZU_USE_QT_WEB_ENGINE=ON
    -DENABLE_QT6=OFF
    -DENABLE_QT_TRANSLATION=ON
    -DUSE_DISCORD_PRESENCE=ON
 
    -DBUILD_REPOSITORY=yuzu-emu/yuzu
    -DBUILD_TAG=${pkgver}
    -DTITLE_BAR_FORMAT_IDLE="yuzu | ${pkgver} {}"
    -DTITLE_BAR_FORMAT_RUNNING="yuzu | ${pkgver} | {}"
    -Wno-dev
 
    -DDYNARMIC_NO_BUNDLED_ROBIN_MAP=ON
    -DENABLE_COMPATIBILITY_LIST_DOWNLOAD=ON
    -DYUZU_USE_BUNDLED_LIBUSB=OFF
    -DYUZU_USE_BUNDLED_OPUS=OFF
  )
 
  cmake "${cmake_options[@]}"
  cmake --build build
}
 
package() {
  DESTDIR="$pkgdir" cmake --install build
}

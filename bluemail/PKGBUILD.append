
_pkgname="bluemail"
_snapname="bluemail"

# options
if [ -z "$_pkgver" ] ; then
  : ${_autoupdate:=true}
else
  : ${_autoupdate:=false}
fi

: ${_pkgver:=1.137.2}


# basic info
pkgname="$_pkgname"
pkgver=1.137.2
pkgrel=1
pkgdesc="BlueMail is a free, secure, universal email app, capable of managing an unlimited number of mail accounts"
url="https://snapcraft.io/$_snapname"
# url='https://www.bluemail.me'
arch=('x86_64')
license=('custom')


# update version
case "${_autoupdate::1}" in
  't'|'y'|'1')
    _response=$(
      curl -H 'Snap-Device-Series: 16' --no-progress-meter "http://api.snapcraft.io/v2/snaps/info/$_snapname" \
        | sed 's@,@,\n@g'
    )

    _dl_url=$(
      printf '%s' "$_response" \
        | grep '"url"' \
        | sed -E 's@^"url":"(https:.*\.snap)".*$@\1@'
    )

    _pkgver_new=$(
      printf '%s' "$_response" \
        | grep '"version"' \
        | sed -E 's@^"version":"([0-9]+\.[0-9]+\.[0-9]+)".*$@\1@'
    )

    # sha3-384 checksum
    _cksum=$(
      printf '%s' "$_response" \
        | grep '"sha3-384"' \
        | sed -E 's@^"sha3-384":"([a-f0-9]+)".*$@\1@'
    )

    _filename="$_pkgname-${_pkgver_new:?}.snap"

    # update _pkgver
    if [ x"$_pkgver" != x"${_pkgver_new:?}" ] ; then
      _pkgver="${_pkgver_new:?}"
      sed -Ei 's@^(\s*: \$\{_pkgver):=.*\}$@\1:='"${_pkgver:?}"'}@' "$startdir/PKGBUILD"
    fi

    pkgver() {
      printf '%s' "$_pkgver"
    }
    ;;
esac

makedepends=(
  'html-xml-utils'
  'pandoc'
  'sha3sum'
  'squashfs-tools'
)
optdepends=(
  'chaotic-interfere: chaotic-aur interference tracker'
)

if [ x"$_pkgname" != x"$pkgname" ] ; then
  provides+=("$_pkgname")
  conflicts+=("$_pkgname")
fi

source=(
  "$_filename"::"$_dl_url"
)
sha256sums=(
  'SKIP'
)

_privacy_policy="privacy_policy"
_privacy_policy_url="https://bluemail.me/privacy/"
_terms_of_use="terms_of_use"
_terms_of_use_url="https://bluemail.me/tos/"

prepare() {
  # check upstream sha3-384sum
  printf '%s  %s' "$_cksum" "$_filename" | sha3-384sum -c

  # privacy policy
  curl --no-progress-meter \
    -o "$_privacy_policy-1.html" \
    "$_privacy_policy_url"

  hxnormalize -x "$_privacy_policy-1.html" \
    | hxselect .template-page \
    | hxremove .footer-area \
    1> "$_privacy_policy-2.html" \
    2> /dev/null

  pandoc --quiet -t plain -o "$_privacy_policy.txt" "$_privacy_policy-2.html"

  # terms of use 
  curl --no-progress-meter \
    -o "$_terms_of_use-1.html" \
    "$_terms_of_use_url"

  hxnormalize -x "$_terms_of_use-1.html" \
    | hxselect .template-page \
    | hxremove .footer-area \
    1> "$_terms_of_use-2.html" \
    2> /dev/null

  pandoc --quiet -t plain -o "$_terms_of_use.txt" "$_terms_of_use-2.html"

  # unpack
  mkdir -p "$_pkgname-$_pkgver"
  unsquashfs -q -n -f -d "$_pkgname-$_pkgver/" "$_filename"

  # .desktop file
  mv "$_pkgname-$_pkgver/meta/gui/$_snapname.desktop" "$srcdir/$_pkgname.desktop"
  sed -i \
    -e 's@'"$_snapname"'@'"${_pkgname}"'@g' \
    -e 's@${SNAP}/meta/gui/icon.png@'"${_pkgname}"'@g' \
    "$srcdir/$_pkgname.desktop"

  # icon
  mv "$_pkgname-$_pkgver/meta/gui/icon.png" "$srcdir"

  # unnecessary files
  rm -r "$_pkgname-$_pkgver/"{data-dir/,gnome-platform/,lib/,meta/,scripts/,usr/,*.sh}
}

package() {
  depends+=(
    'libnotify'
    'libappindicator-gtk3'
    'libxtst'
    'nss'
    'libxss'
  )

  # opt
  install -d "$pkgdir/opt/$_pkgname"
  cp -r "$srcdir/$_pkgname-$pkgver/"* "$pkgdir/opt/$_pkgname"

  # symlink binary
  install -d "$pkgdir/usr/bin"
  ln -s "/opt/$_pkgname/$_snapname" "$pkgdir/usr/bin/$_pkgname"

  # icons
  install -Dm644 "$srcdir/icon.png" "$pkgdir/usr/share/icons/hicolor/512x512/apps/$_pkgname.png"
  install -Dm644 "$srcdir/$_pkgname.desktop" "$pkgdir/usr/share/applications/$_pkgname.desktop"

  # license/eula
  install -Dm644 "$_privacy_policy.txt" -t "$pkgdir/usr/share/licenses/$pkgname"
  install -Dm644 "$_terms_of_use.txt" -t "$pkgdir/usr/share/licenses/$pkgname"
}
